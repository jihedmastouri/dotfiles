#!/usr/bin/env bash

# General app installer/remover for web and tui apps

# Parse options
parse_options() {
    REMOVE_APP=""
    HELP=false
    INTERACTIVE=false

    while [[ $# -gt 0 ]]; do
        case $1 in
            -h|--help)
                HELP=true
                shift
                ;;
            -r|--remove)
                if [[ -n "$2" && "$2" != -* ]]; then
                    REMOVE_APP="$2"
                    shift 2
                else
                    echo "Error: --remove requires an app name"
                    exit 1
                fi
                ;;
            -i|--interactive)
                INTERACTIVE=true
                shift
                ;;
            -*)
                echo "Unknown option: $1"
                echo "Use -h or --help for usage"
                exit 1
                ;;
            *)
                break
                ;;
        esac
    done

    # Remaining arguments
    ARGS=("$@")
}

usage() {
    cat << EOF
appinstall - Install or remove desktop apps for web and TUI applications

USAGE:
    appinstall [options] [name type exec icon [mime]]

OPTIONS:
    -h, --help              Show this help message
    -r, --remove <name>     Remove the specified app
    -i, --interactive       Force interactive mode

ARGUMENTS (non-interactive):
    name                    App name
    type                    App type: web or tui
    exec                    Execution argument (URL for web, command for tui)
    icon                    Icon reference (URL or filename in dotfiles)
    mime                    Optional MIME types

EXAMPLES:
    appinstall -i
    appinstall MyApp web https://example.com https://icon.url
    appinstall --remove MyApp

Desktop files and icons are managed in ~/.dotfiles/apps/.local/share/
EOF
}

main() {
    parse_options "$@"

    if [[ "$HELP" == true ]]; then
        usage
        exit 0
    fi

    if [[ -n "$REMOVE_APP" ]]; then
        APP_NAME="$REMOVE_APP"
        DESKTOP_FILE="$HOME/.local/share/applications/$APP_NAME.desktop"
        DOTFILES_DESKTOP="$HOME/.dotfiles/apps/.local/share/applications/$APP_NAME.desktop"
        ICON_FILE="$HOME/.local/share/icons/$APP_NAME.png"
        DOTFILES_ICON="$HOME/.dotfiles/apps/.local/share/icons/$APP_NAME.png"
        if [ -L "$DESKTOP_FILE" ] && [ -f "$DOTFILES_DESKTOP" ]; then
            rm "$DESKTOP_FILE" "$DOTFILES_DESKTOP"
            if [ -L "$ICON_FILE" ]; then
                rm "$ICON_FILE" "$DOTFILES_ICON"
            fi
            echo "Removed $APP_NAME"
        else
            echo "App $APP_NAME not found"
            exit 1
        fi
        exit 0
    fi

    if [[ "$INTERACTIVE" == true ]] || [[ ${#ARGS[@]} -lt 4 ]]; then
        echo -e "\e[32mLet's create a new app you can start with the app launcher.\n\e[0m"
        APP_NAME=$(gum input --prompt "Name> " --placeholder "My favorite app")
        APP_TYPE=$(gum choose --header "Type>" web tui)
        if [ "$APP_TYPE" = "web" ]; then
            EXEC_ARG=$(gum input --prompt "URL> " --placeholder "https://example.com")
        else
            EXEC_ARG=$(gum input --prompt "Command> " --placeholder "command to run")
        fi
        ICON_REF=$(gum input --prompt "Icon URL> " --placeholder "See https://dashboardicons.com (must use PNG!)")
        MIME_TYPES=""
        INTERACTIVE_MODE=true
    else
        APP_NAME="${ARGS[0]}"
        APP_TYPE="${ARGS[1]}"
        EXEC_ARG="${ARGS[2]}"
        ICON_REF="${ARGS[3]}"
        MIME_TYPES="${ARGS[4]}"
        INTERACTIVE_MODE=false
    fi

    # Validate
    if [[ -z "$APP_NAME" || -z "$APP_TYPE" || -z "$EXEC_ARG" || -z "$ICON_REF" ]]; then
        echo "You must set app name, type, exec arg, and icon URL!"
        exit 1
    fi

    if [[ "$APP_TYPE" != "web" && "$APP_TYPE" != "tui" ]]; then
        echo "Type must be web or tui"
        exit 1
    fi

    # Icon handling
    DOTFILES_ICON_DIR="$HOME/.dotfiles/apps/.local/share/icons"
    mkdir -p "$DOTFILES_ICON_DIR"
    if [[ $ICON_REF =~ ^https?:// ]]; then
        DOTFILES_ICON_PATH="$DOTFILES_ICON_DIR/$APP_NAME.png"
        LOCAL_ICON_PATH="$HOME/.local/share/icons/$APP_NAME.png"
        if curl -sL -o "$DOTFILES_ICON_PATH" "$ICON_REF"; then
            ln -sf "$DOTFILES_ICON_PATH" "$LOCAL_ICON_PATH"
            ICON_PATH="$LOCAL_ICON_PATH"
        else
            echo "Error: Failed to download icon."
            exit 1
        fi
    else
        DOTFILES_ICON_PATH="$DOTFILES_ICON_DIR/$ICON_REF"
        LOCAL_ICON_PATH="$HOME/.local/share/icons/$ICON_REF"
        if [ -f "$DOTFILES_ICON_PATH" ]; then
            ln -sf "$DOTFILES_ICON_PATH" "$LOCAL_ICON_PATH"
            ICON_PATH="$LOCAL_ICON_PATH"
        else
            echo "Error: Icon file not found in dotfiles."
            exit 1
        fi
    fi

    # Exec command
    if [ "$APP_TYPE" = "web" ]; then
        EXEC_COMMAND="omarchy-launch-webapp $EXEC_ARG"
        TERMINAL=false
    else
        EXEC_COMMAND="$EXEC_ARG"
        TERMINAL=true
    fi

    # Create desktop file
    DOTFILES_DESKTOP_DIR="$HOME/.dotfiles/apps/.local/share/applications"
    mkdir -p "$DOTFILES_DESKTOP_DIR"
    DOTFILES_DESKTOP_FILE="$DOTFILES_DESKTOP_DIR/$APP_NAME.desktop"
    LOCAL_DESKTOP_FILE="$HOME/.local/share/applications/$APP_NAME.desktop"

    cat >"$DOTFILES_DESKTOP_FILE" <<EOF
[Desktop Entry]
Version=1.0
Name=$APP_NAME
Comment=$APP_NAME
Exec=$EXEC_COMMAND
Terminal=$TERMINAL
Type=Application
Icon=$ICON_PATH
StartupNotify=true
EOF

    if [[ -n $MIME_TYPES ]]; then
        echo "MimeType=$MIME_TYPES" >>"$DOTFILES_DESKTOP_FILE"
    fi

    chmod +x "$DOTFILES_DESKTOP_FILE"
    ln -sf "$DOTFILES_DESKTOP_FILE" "$LOCAL_DESKTOP_FILE"

    if [[ $INTERACTIVE_MODE == true ]]; then
        echo -e "You can now find $APP_NAME using the app launcher (SUPER + SPACE)\n"
    fi
}

main "$@"
