#!/bin/bash

PROG=$0

usage() {
  # Display help function
  cat << EOF >&2
  Usage of Fuzzy-Search: 
  
  <Fuzz-Function*> -[rhdui] <Command> | <Fuzz-Function*> -h
	
	-r Start Search at Root dir
	-h Start Search Form $h
	-d Search Dirs only
	-u The Arguments Unordered
	-i Access Hidden Files
	-h Help

	Functions:
	-- Fuzz-Vim : fvim
	-- Fuzz-Cd : fcd

-- Note: Set alias for all derivative functions.
-- Dependencies: fd, fzf.
-- This could be a wrapper: $PROG
EOF
}

# resolve options
root=false
h=false
hidden=false
order=true
dir=false
while getopts "lriduh" o; do
  case $o in
    i) hidden=true
		;;
    r) root=true
		;;
    h) h=true
		;;
    d) dir=true
		;;
    u) order=false
		;;
    h) usage
		exit 0
		;;
    *) usage 
		exit 1
		;;
  esac 
done

# get arguments only
shift $(($OPTIND-1))
arguments="$*"

# remove white space if true
if $order 
then
	str="$(echo $arguments | tr -d ' ')" 
else
	str="$arguments"
fi

CMMD="fd . './'"
[[ "$root" = true ]] &&
	CMMD='fd . /'
[[ "$h" = true ]] &&
	CMMD='fd . ~'
[[ "$hidden" = true ]] &&
	CMMD="$CMMD --hidden"

Query="--prompt 'All> ' --preview 'bat {}'"
[[ "$dir" = true ]] &&
	CMMD="$CMMD -t d" &&
	Query="--prompt 'Dirs> ' --preview \
	'tree -I \"node_modules|bin|obj|build|dist|.vscode|.idea\" {}'"

Query="$Query --height=40% --layout=reverse --info=inline"

[[ -n $str ]] &&
	Query="$Query --query $str"

RESULTS=$(eval "$CMMD | fzf-tmux -p 80% $Query" )
echo $RESULTS
