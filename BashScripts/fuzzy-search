#!/bin/bash

PROG=$0

usage() {
  # Display help function
  cat << EOF >&2
  Usage of Fuzzy-Search: 
  
  <Fuzz-Function*> -[rmduih] <Command> | <Fuzz-Function*> -h
	
	-r Start Search at Root dir
	-m Start Search Form $HOME
	-d Search Dirs only
	-u The Arguments Unordered
	-i Access Hidden Files
	-h Help

	Functions:
	-- Fuzz-Vim : fvim
	-- Fuzz-Cd : fcd

-- Note: Set alias for all derivative functions.
-- Dependencies: fd, fzf.
-- This could be a wrapper: $PROG
EOF
}

# resolve options
location_arg='./'
hidden=false
order=true
dir=false
while getopts "rmduih" o; do
  case $o in
	r) location_arg='/'
		  ;;
	m) location_arg=$HOME
		;;
	d) dir=true
		;;
	u) order=false
		;;
    i) hidden=true
		;;
    h) usage
		exit 0
		;;
    *) usage 
		exit 1
		;;
  esac 
done

# get arguments only
shift $(($OPTIND-1))
arguments="$*"

# remove white space if true
if $order 
then
	str="$(echo $arguments | tr -d ' ')" 
else
	str="$arguments"
fi

hid_arg=""
[[ "$hidden" = true ]] &&
	hid_arg="--hidden"


Query="--prompt 'All> ' --preview 'bat {}'"
dir_arg=""
[[ "$dir" = true ]] &&
	dir_arg="-t d" &&
	Query="--prompt 'Dirs> ' --preview \
	'exa --all --tree --level=3 --icons --ignore-glob \"node_modules|bin|obj|build|dist|.vscode|.idea\" {}'"

Query="$Query --height=40% --layout=reverse --info=inline"

[[ -n $str ]] &&
	Query="$Query --query $str"

RESULTS=$(fd . $location_arg $hid_arg $dir_arg | fzf-tmux -p 80% $Query)
echo $RESULTS
