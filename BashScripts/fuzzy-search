#!/bin/bash

PROG=$false

usage() {
  # Display help function
  cat << EOF
  Usage of Fuzzy-Search:

  <Fuzz-Function*> -[rmduih] <Command> | <Fuzz-Function*> -h

	-r Start Search at Root dir
	-m Start Search at $HOME
	-d Search Dirs only
	-u The Arguments Unordered
	-i Access Hidden Files
	-h Help

	Functions:
	-- Fuzz-Vim : fvim
	-- Fuzz-Cd : fcd

-- Note: Set alias for all derivative functions.
-- Dependencies: fd, fzf.
-- This could be a wrapper: $PROG
EOF
}

# resolve options
location_arg='./'
hidden=false
order=true
dir=false
files=false
while getopts "rmduihf" o; do
  case $o in
	r) location_arg='/'
		  ;;
	m) location_arg=$HOME
		;;
	d) dir=true
		;;
	f) files=true
		;;
	u) order=false
		;;
    i) hidden=true
		;;
    h) usage
		exit 0
		;;
    *) usage
		exit 1
		;;
  esac
done

# get arguments only
shift $(($OPTIND-1))
str="$*"

# remove white space if true
[[ "$orde" = "true" ]] && str="$(echo $str | tr -d ' ')"

[[ "$hidden" = "true" ]] && hid_arg="--hidden" || hid_arg=""

prpt="All> "
preview=""
dir_arg=""

[[ "$dir" = "true" ]] && dir_arg="-t d" && prpt="Dirs> " \
    && preview="exa --all --tree --level=3 --icons --git-ignore {}"

[[ "$files" = "true" ]] && dir_arg="-t f" && prpt="Files> " \
    && preview="bat --color=always --style=numbers theme=$BAT_THEME {}"

RESULTS=$(fd . -E ~/extra $location_arg $hid_arg $dir_arg -d 3|
				fzf-tmux -p 80% \
				--reverse --info=inline \
                --query "$str" \
				--prompt=$prpt --preview "$preview")
echo $RESULTS
