#!/bin/zsh

function getTheme () {
	OS=$(uname -s)
	if [[ $OS == "Linux" ]]; then
		[[ $DESKTOP_SESSION == "gnome" ]] && theme=$(gsettings get org.gnome.desktop.interface color-scheme)
		# kde
	else
	 # Darwin
	fi
	[[ "$theme" == "'prefer-dark'" ]] && theme="dark" || theme="light"
	echo $theme
}

function goingDark () {
	if [ "$#" -gt 0 ]; then
		gsettings set org.gnome.desktop.interface color-scheme prefer-dark
	fi
	echo "1" > ~/.terminal_theme
	export BAT_THEME="Dracula"
	export DELTA_FEATURE="dark-mode"
	export DARK_THEME="1"
	export CATPPUCCIN="mocha"
	alacritty-themes Catppuccin-Macchiato > /dev/null
	rm $HOME/.config/alacritty/alacritty.yml.*.bak
}

function letThereBeLight () {
	if [ "$#" -gt 0 ]; then
		gsettings set org.gnome.desktop.interface color-scheme prefer-light
	fi
	echo "0" > ~/.terminal_theme
	export BAT_THEME="GitHub"
	export DELTA_FEATURE="light-mode"
	export DARK_THEME="0"
	export CATPPUCCIN="latte"
	alacritty-themes Catppuccin-Latte  > /dev/null
	rm $HOME/.config/alacritty/alacritty.yml.*.bak
}

function startd_ () {
    sudo systemctl start $1
    sudo systemctl enable $1
	sudo systemctl status $1 | grep "Active" | awk '{printf " Status: %s\n", $2}'
}

function bla () {
	echo "hi"
}

function Home () {
    [[ $# -eq 0 ]] && session="Home" || session=$1
	tmux attach-session -t "$session" &> /dev/null || tmux new -s "$session"
}

function codi () {
  local syntax="${1:-python}"
  shift
  vim -c \
    "let g:startify_disable_at_vimenter = 1 |\
    set bt=nofile ls=0 noru nonu nornu |\
    hi ColorColumn ctermbg=NONE |\
    hi VertSplit ctermbg=NONE |\
    hi NonText ctermfg=0 |\
    Codi $syntax" "$@"
}

function myip () {
    curl -s 'https://ipinfo.io' | jq -r '.[]' | head --lines=7
}

function _myip () {
    ip address | grep -o \"inet 192.*/\" | awk '{ print \$2 }' | tr / ' ' | xargs
}

function gcm () {
    text=`curl -s curl -s https://whatthecommit.com/ | xmllint --html --xpath '//*[@id="content"]/p[1]/text()' -`
    git add -a && git commit -m "$text"
}

function fcd () {
    RESULTS=$(~/BashScripts/fuzzy-search -d $@)

    [[ -n $RESULTS ]] &&
        cd $RESULTS ||
        echo "No dir was selected"
}

function fvim () {
    RESULTS=$(~/BashScripts/fuzzy-search $@)

    [[ -n $RESULTS ]] &&
        $EDITOR $RESULTS ||
        echo "No file/dir was selected"
}

function myConda () {
    __conda_setup="$('/home/mj/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
    if [ $? -eq 0 ]; then
        eval "$__conda_setup"
    else
        if [ -f "/home/mj/anaconda3/etc/profile.d/conda.sh" ]; then
            . "/home/mj/anaconda3/etc/profile.d/conda.sh"
        else
            export PATH="/home/mj/anaconda3/bin:$PATH"
        fi
    fi
    unset __conda_setup
}
